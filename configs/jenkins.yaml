credentials:
  system:
    domainCredentials:
    - credentials:
      - string:
          description: "Example secret text credential"
          id: "example-secret-text"
          scope: GLOBAL
          secret: "{AQAAABAAAAAgzVzPlqnAMzYipR5gLU3reiHNiqhrLMnQXW3C6nei9dZtQ2xDpS9fRVMWF6EqjsrF}"
      - usernamePassword:
          description: "Example username/password credential"
          id: "example-username-password"
          password: "{AQAAABAAAAAgLNdOHVvHi7k64avpeUvFwGDOEPzJMNOw8cKfaoCvfU7uYpoCFaP8yXKQZDjAUdax}"
          scope: GLOBAL
          username: "change-me-username"
      - basicSSHUserPrivateKey:
          description: "Example SSH private key credential"
          id: "example-ssh-key"
          privateKeySource:
            directEntry:
              privateKey: "{AQAAABAAAACwAs2FT0XP3xN/CUAOkba8pxmt7ny/u98CreutQpWltqe8oME8rWUWx7i8cidHl0Yxi0j/XQ6zCZHJINicTg0/K6Pk7iKM6Siaobw1SNda7kStUg/W9wITh26vw9y12liVkS3v5JuIHP2tcY7EH6PDZ/N/8MtBQLXgRUwzi0k7jn9gfEiRVCW56dBs4/HUNcren+1r1oxFFksHxwCv7CuILugoPPkXTAqmh5wE9YFO4BVaNTIDb+N9/TQ/B7IPIVVl}"
          scope: GLOBAL
          username: "ssh-user"
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    roleBased:
      roles:
        global:
        - entries:
          - group: "FullAdmin"
          name: "FullAdmin"
          pattern: ".*"
          permissions:
          - "Overall/Administer"
        - entries:
          - group: "JobAdmin"
          name: "JobAdmin"
          pattern: ".*"
          permissions:
          - "Metrics/ThreadDump"
          - "Job/Build"
          - "Job/Discover"
          - "Job/Read"
          - "Agent/ExtendedRead"
          - "Credentials/View"
          - "Agent/Connect"
          - "Run/Replay"
          - "Agent/Disconnect"
          - "Job/Cancel"
          - "Job/ExtendedRead"
          - "Overall/Read"
          - "Overall/SystemRead"
          - "Job/Configure"
          - "Job/Workspace"
          - "Metrics/View"
          - "View/Read"
          - "Metrics/HealthCheck"
        - entries:
          - group: "ServiceUser"
          name: "ServiceUser"
          pattern: ".*"
          permissions:
          - "Job/ExtendedRead"
          - "Job/Build"
          - "Job/Delete"
          - "Job/Create"
          - "Job/Discover"
          - "Job/Read"
          - "Agent/Build"
          - "Job/Configure"
        - entries:
          - group: "authenticated"
          name: "User"
          pattern: ".*"
          permissions:
          - "Overall/Read"
        items:
        - entries:
          - group: "JobManager"
          name: "JobManager"
          pattern: "(?!^seedJobs$)(^.*$)"
          permissions:
          - "Job/Cancel"
          - "Job/Build"
          - "Job/Discover"
          - "Job/Read"
          - "View/Read"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  disabledAdministrativeMonitors:
  - "hudson.util.DoubleLaunchChecker"
  labelAtoms:
  - name: "built-in"
  - name: "jenkins-controller"
  labelString: "jenkins-controller"
  log:
    recorders:
    - loggers:
      - level: "INFO"
        name: "io.jenkins.plugins.casc"
      name: "Configuration as Code Logs"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  noUsageStatistics: true
  nodeMonitors:
  - "architecture"
  - "clock"
  - diskSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "swapSpace"
  - tmpSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "responseTime"
  - jvmVersion:
      comparisonMode: RUNTIME_GREATER_OR_EQUAL_MASTER_BYTECODE
      disconnect: false
      ignored: true
  - remotingVersion:
      ignored: true
  numExecutors: 2
  primaryView:
    all:
      name: "all"
  projectNamingStrategy:
    roleBased:
      forceExistingJobs: false
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    mock:
      data: |-
        admin FullAdmin
        bob JobAdmin
        bill JobAdmin
        tim JobManager
        tom JobManager
        auto ServiceUser
        jane User
        john User
      groupIdStrategy: "caseInsensitive"
      randomDelay: false
      userIdStrategy: "caseInsensitive"
  slaveAgentPort: -1
  systemMessage: "Welcome to Jenkins Test!"
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - list:
      columns:
      - "status"
      - "weather"
      - "jobName"
      - "lastSuccess"
      - "lastFailure"
      - "lastDuration"
      - "buildButton"
      description: "Lists all jobs other than seedJobs."
      filterQueue: true
      includeRegex: "(?!^seedJobs$)(^.*$)"
      name: "Normal Jobs"
  - all:
      name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter:
      includes:
        classNames:
        - "com.cloudbees.hudson.plugins.folder.properties.FolderCredentialsProvider"
        - "com.cloudbees.plugins.credentials.SystemCredentialsProvider$ProviderImpl"
    typeFilter:
      includes:
        classNames:
        - "com.cloudbees.plugins.credentials.impl.CertificateCredentialsImpl"
        - "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"
        - "com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey"
        - "org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl"
        - "org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl"
appearance:
  pipelineGraphView:
    showGraphOnBuildPage: true
    showGraphOnJobPage: false
  prism:
    theme: PRISM
  themeManager:
    disableUserThemes: false
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  cps:
    hideSandbox: true
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  globalJobDslSecurityConfiguration:
    useScriptSecurity: true
  queueItemAuthenticator:
    authenticators:
    - global:
        strategy:
          specificUsersAuthorizationStrategy:
            userid: "auto"
  sSHD:
    port: -1
  scriptApproval:
    forceSandbox: true
unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  buildFailureAnalyzer:
    doNotAnalyzeAbortedJob: false
    gerritTriggerEnabled: true
    globalEnabled: true
    graphsEnabled: false
    knowledgeBase: "localFile"
    maxLogSize: 0
    metricSquashingEnabled: false
    noCausesEnabled: true
    noCausesMessage: "No problems were identified. If you know why this problem occurred,\
      \ please add a suitable Cause for it."
    nrOfScanThreads: 3
    slackFailureCategories: "ALL"
    slackNotifEnabled: false
    testResultParsingEnabled: false
  claimConfig:
    emailDisplayedForAssigneesList: false
    propagateToFollowingBuildsByDefault: false
    sendEmails: false
    sendEmailsForStickyFailures: false
    sortUsersByFullName: false
    stickyByDefault: true
  datadogGlobalConfiguration:
    cacheBuildRuns: true
    ciInstanceName: "jenkins"
    collectBuildLogs: false
    collectBuildTraces: false
    datadogClientConfiguration:
      datadogApiConfiguration:
        apiKey: "datadogTextApiKey"
        intake:
          datadogIntakeSite:
            site: US1
    emitConfigChangeEvents: false
    emitSecurityEvents: true
    emitSystemEvents: true
    enableCiVisibility: false
    refreshDogstatsdClient: false
    reportWith: "HTTP"
    showDatadogLinks: true
    targetApiURL: "https://api.datadoghq.com/api/"
    targetLogIntakeURL: "https://http-intake.logs.datadoghq.com/v1/input/"
    targetWebhookIntakeURL: "https://webhook-intake.datadoghq.com/api/v2/webhook/"
    traceServiceName: "jenkins"
    useAwsInstanceHostname: false
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubPluginConfig:
    hookUrl: "http://localhost:8080/github-webhook/"
  globalLibraries:
    libraries:
    - defaultVersion: "main"
      name: "utils"
      retriever:
        modernSCM:
          libraryPath: "shared_libraries/utils/"
          scm:
            git:
              id: "6fc87cf5-d8df-492e-9773-786c0e84c7c7"
              remote: "https://github.com/Minreaux/jenkins-test"
              traits:
              - sparseCheckoutPaths:
                  extension:
                    sparseCheckoutPaths:
                    - path: "shared_libraries/utils/"
  jFrogPlatformBuilder:
    allowHttpConnections: false
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "http://localhost:8080/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  perforce:
    lastSuccess: false
  pipelineStepsAWS:
    enableCredentialsFromNode: false
  pollSCM:
    pollingThreadCount: 10
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  slackNotifier:
    botUser: false
    sendAsText: false
  timestamper:
    allPipelines: true
    elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
    systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
  warningsParsers:
    consoleLogScanningPermitted: false
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
